% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/1-same-factor.R
\name{same_factor}
\alias{same_factor}
\title{Compare Factor Similarity Across Lists}
\usage{
same_factor(
  ...,
  method = c("exact", "order"),
  levels,
  ordered = FALSE,
  digits = 3
)
}
\arguments{
\item{...}{Lists of categorical values (character or factor) to compare.}

\item{method}{Character vector of similarity method (default: c("exact", "order")).}

\item{levels}{Character vector of all allowed levels for comparison.}

\item{ordered}{Logical. If TRUE, treat levels as ordered (ordinal). If FALSE,
the "order" method is skipped.}

\item{digits}{Number of digits to round results (default: 3).}
}
\value{
An S3 object of type "similar_factor" containing:
\itemize{
\item scores: Numeric similarity scores by method and comparison
\item summary: Summary statistics by method and comparison
\item methods: Methods used for comparison
\item list_names: Names of compared lists
\item levels: Levels used for categorical comparison
}
}
\description{
Computes similarity scores between two or more lists of factors or enums.
Implements both exact matching methods for precise category equivalence and
order-preserving comparisons.
}
\examples{
list1 <- list("high", "medium", "low")
list2 <- list("high", "low", "medium")

# Using unnamed lists
result1 <- same_factor(
  list1, list2,
  levels = c("low", "medium", "high"),
  ordered = TRUE
)

# Using named lists for more control
result2 <- same_factor(
  "l1" = list1, "l2" = list2,
  levels = c("low", "medium", "high"),
  ordered = TRUE
)
}
